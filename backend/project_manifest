1. В проекте сервисы всегда возвращают только массив элементов.
2. Из сервисов массивы уходят в Actions там они превращаются в словари где ИМЯ_ЭЛЕМЕНТА : ДАННЫЕ.
    2.1 Все преобразование в ИМЯ_ЭЛЕМЕНТА проходят через специальную функцию преобразования.
3. Actions используются для зваимодейсвия с сервисами и BD
4. Database используются для работы с главной базой данных.
5. http используются для взаимодействия с пользователем и вызова необходимых actions, а так же передавать ему базу данных.
6. Время передается в формате Intger по системе Unix EPOCH

Интерфейсы:
repositories - необходимы для взимодействия со сторонними программами.
1. KasperskyRepository(InteractionRepository) - Взаимодействует с сервером KSC отправляет/получает запросы.
2. DallasRepository(InteractionRepository) - Взаимодействует с самописным DallasTakerServer отправляет/получает запросы
3. ActiveDirectoryRepository(InteractionRepository) - Взаимодействует с ActiveDirectory server отправляет и получает запросы по ldap
4. PuppetRepository(InteractionRepository) - Взаимодействует в Puppet server отправляет http запросы и получает на них ответ.
5. BaseRepository - Базовый интерфейс репозиториев который указыет базовые методы и поля для классов-потомков
6. StorageRepository(BaseRepository) - Интерфейс для описания базовых действия со внешними средствами хранения.
7. InteractionRepository(BaseRepository) - Интерфейс для описания взаимодействующих классов-потомков.
8. MainDatabaseRepository(StorageRepository) - Взаимодействует с главной базой данных. загружает описанные модели таблиц базы данных и управляет соединением в базой данных.

services - необходимы для взаимодействия с Repository'ями.
1. ActiveDirectoryService - методы взаимодействия с Active Directory Server. (Методы принимают RepositoryStorage и RepositoryActiveDirectory)
2. ComputersService - методы взаимодействия с базой данных и все что относиться к компьютерам (Методы принимают RepositoryStorage)
3. ComputersFrameService - Метод извлечения данных по компьютерам.
4. DallasLockService - методы для работы с DallasRepository. (Методы принимают RepositoryStorage и DallasRepository)
5. functions - методы для работы которые не относяться ни к одному из файлов.
6. IpService - Методы для работы с ip адресами компьютеров в базе данных (Методы принимают RepositoryStorage).
7. KasperskyService - методы для работы с KasperskyRepository. (Методы принимают RepositoryStorage и KasperskyRepository)
8. OsService - методы для работы с названиями операционных систем в базе данных (Методы принимают RepositoryStorage)
9. PuppetService - методы для работы с PuppetRepository (Методы принимают RepositoryStorage и PuppetRepository)
10. UnitsService - методы для работы с названиями подразделений в базе данных. (Методы принимают RepositoryStorage)
11. UsersService - методы для работы с пользователями а базе данных. (Методы принимают RepositoryStorage)
12. UsersFrameService - метод для получения пользователей.

http -> delivery - необходимы для взаимодействия с пользователем и методами service'ов.
1. functions - Функции которые могут использователя повсеместно в delivery и не подходят для вынесения в отдельный файл.
2. Routes - Базовый класс для всех групп путей.
3. CommonsHandlers - класс который содержит обработчики для действий не относящихся ни к одной из групп. (Например: /now - показывает сколько сейчас времени на сервере) (Принимает параметров MiddlewareResponse), (Отдает ответ припомощи MiddlewareResponse)
4. ComputersHandlers- клас который содержит обтработчики для действий относящихся к копьютерам (Принимает параметров MiddlewareResponse), (Отдает ответ припомощи MiddlewareResponse)
5. CryptoGatewaysHandlers - клас который содержит обтработчики для действий относящихся к криптошлюзам (Принимает параметров MiddlewareResponse), (Отдает ответ припомощи MiddlewareResponse)
6. DevicesHandlers - клас который содержит обтработчики для действий относящихся к устройствам (Принимает параметров MiddlewareResponse), (Отдает ответ припомощи MiddlewareResponse)
7. LogsHandlers - клас который содержит обтработчики для действий относящихся к логам (Принимает параметров MiddlewareResponse), (Отдает ответ припомощи MiddlewareResponse)
8. StatisticsHandlers - клас который содержит обтработчики для действий относящихся к статистики (Принимает параметров MiddlewareResponse), (Отдает ответ припомощи MiddlewareResponse)
9. UpdatesHandlers -  клас который содержит обтработчики для действий относящихся к обновлениям (Принимает параметров MiddlewareResponse), (Отдает ответ припомощи MiddlewareResponse)
10. UsersHandlers -  клас который содержит обтработчики для действий относящихся к пользователям (Принимает параметров MiddlewareResponse), (Отдает ответ припомощи MiddlewareResponse)
11. MiddlewareResponse - Класс который служит для предварительной подготовки данных. В последующем возвращает готовый объект ответа http запроса.
12. app - Класс который производит подготовку внутреннего http сервера.

Entities - Сущности являются моделями конкретных сущностей (Все модели данных сделанных при помощи Pydantic)
1. CryptoGatewayEntity - Сущность конкретного криптошлюза
2. UnitEntity - Сущность конкретного подразделения.
3. RepositoryEntity - Сущность некоторого конретного репозитория
4. UserEntity - Сущность некоторого конкртеного пользователя. Агрегирует в себе Unit либо None (в случае отсутствия)
5. ComputerEntity - Сущность некоторого конкретного компьютера. Его Имя, Unit ...
6. PuppetEntity - Сущность данных о puppet конретного компьютера.
7. ActiveDirectoryEntity - Сущность данных о ActiveDirectory конкретного компьютера.
8. DallasLockEntity - Сущность данных о DallasLock конкретного компьютера
8. KasperskyEntity - Сущность данных о Kaspersky конкретного компьютера
8. IpEntity - Сущность данных о DallasLock конкретного компьютера
8. OsEntity - Сущность данных о DallasLock конкретного компьютера

Модели базы данных:
Adapters
    Addresses_id - Ссылка на запись в таблице Ip
    Computers_id - Ссылка на запись в таблице Computers
    name - Название адаптера (По задумке здесь запись типа: Intel...)
    updated - Дата когда последний раз производителось изменение с записью.
    created - Дата когда запись была создана в первый раз.

Addresses
    id - Идентификатор адреса.
    CryptoGateways_id - Ссылка на запись в таблице CryptoGateways
    ipv4 - непосредственно IP адресс типа xxx.xxx.xxx.xxx
    isAllowed - Флаг разрешенный это айпи адрес или нет.


Computers
    id - Идентификатор компьютера в таблице.
    name - Имя компьютера (SZO-555-1015)
    comment - Комментарий к этом компьютеру.
    created - Дата создания.
    Units_id - Сcылка на запись в таблице Units.

Computers_ActiveDirectory
    id - Идентификатор записи об AD компьютера (внутренний для таблицы)
    Computers_id - Ссылка на идентификатор компьютера в таблице Computers.
    isDeleted - Был ли компьютера удален из AD, если да то ставится дата когда это было замечено системой.
    last_visible - Дата последнего появляения в AD. (Разброс в 2 недели т.к. из-за репликации вход пользователя выбирается рандомно)
    isActive - Заблокирован ли этот компьютер или нет. Если да то ставиться дата когда это было обнаружено.
    registred - Дата создания компьютера в AD.
    updated - Дата последнего обновления информации записи в базе данных.
    created - Дата создания записи в базе данных.

CryptoGateways
    id - Идентификатор записи о криптошлюзе (внутренний для таблицы)
    Units_id - ССылка на идентфиикатор подразделения к которому криптошлюз относиться.
    address - Адрес сети в формате xxx.xxx.xxx.xxx
    mask - Размер маски для сети (например: 24 - 255 адресов - xxx.xxx.xxx.0-255)
    caption - Описание криптошлюза (Например: ВПУ В\Ч 5402)
    name - название криптошлюза (Например: 58342) (записывается в виде строки)


DallasLock
    id - Идентификатор записи о dallas lock конкретного компьютера. (внутренний для таблицы)
    Computers_id - Ссылка на индентификатор записи в таблицы Computers.
    status - Статус код компьютера в статисики. (Код внутренний для программы панель администратора dallas lock)
    server - сервер с которого был получен компьютер.
    isDeleted - Если компьютер был удален то будет написана дата удаления.
    updated - дата последнего обноления записи в таблице.
    created - дата создания записи.

Devices
    id - Внутренний идентификатор устройства в таблице.
    Addresses_id - ссылка на идентификатор в таблице с ip адресами.
    Units_id - ссылка на идентификатор подразделения
    name - название устройства (например: SZO-UPS01)
    comment - комментарий для устройства.
    updated - дата последнего обнолвения записи в таблице.
    created - дата создания записи.

Kaspersky
    id - Внутренний индентификтаор записи информации о касперском компьютера в таблце.
    Computers_id - ссылка на идентификатор в таблице компьютеров.
    OperationSystems_id - ссылка на идентификатор в таблице с названиями операционных систем.
    Addresses_id - ссылка на идентификатор в таблице с ip адресами.
    agent_version - версия агента касперского на компьютере. (текстовое поле)
    security_version - версия защиты касперского на компьютере. (текстовое поле)
    server - сервер на котором находиться компьютер.
    isDeleted - если раньше был каспеский на сервер а потом пропал будет записана дата удаления.
    updated - дата последнего обновления в таблице.
    created - дата создавиня записи в таблице.

Logons
    Computers_id - ссылка на идентификатор в таблице компьтеров.
    Users_id - ссылка на идентификатор в таблице пользователей.
    OperationSystems_id - ссылка на идентификатор в таблице оперционные системы.
    created - дата создания записи она же дата и время входа пользователя в компьютер.


OperationSystems
    id - Внутренний идентификатор названия операционной системы.
    name - название операционнй системы
    isUnix - флаг язывается ли операционная система линксом (если true) или это виндовс (если false)

PuppetEvents
    id - внутренний идентификатор события паппета в таблице.
    Puppets_id - ссылка на запись в таблице паппет.
    title - заголовок события паппет.
    message - сообщения о событии в паппет.
    created - дата создания записи в таблице.


Puppets
    id - внутренний идентификатор записи о компьютере в паппет.
    Computers_id - ссылка на идентификатор в таблице компьютеров.
    Addresses_id - ссылка на идентификатор в таблице  ip адрессов.
    OperationSystems_id - ссылка на идентификатор в таблице названий операционных систем.
    board_serial_number - серийный номер материнской платы.
    astra_update - версия обнолвения Astra linux
    environment - на каком энвиронменте находиться компьютер.
    domain - домен.
    serial_number - серийный номер непонятно чего.
    isVirtual - true если это виртуальная машина по мнению puppet иначе false
    mac - мак адресс сетевой карты
    kesl_version - версия защиты касперского по мнению puppet.
    klnagent_version - версия агента каспеского по мнению puppet.
    uptime_seconds - сколько в последний раз был в рабочем состоянии. Время в секундах
    isDeleted - Если запись была на puppet но потом она была по какой-то причине удалена, то здесь будет написано время когда это стало известно.
    updated - дата последнего обнолвения записи о puppet в таблице.
    created - дата создавния записи.


Units
    id - Внутренний индентификатор подраздления в базе данных.
    name - Названия подразделения (Например: T210)
    root_id - ссылка на идентификатор подразделения (то есть ссылка таблицы саму на себя), которая отображает какому подразделению починяется. (Например(id:name) 21:SZO, 40:2659, 40 ссылается на 21, потому что 2659 подчиняется СЗО)


Users
    id - Внутренний идентификатор таблицы пользователей.
    login - логин пользователя например (Например: shemakovnd)
    privileges - число привилегий подступных пользователей.
    created - дата создания записи в таблице.
    Users_ActiveDirectory_id - ссылка на таблицу с информацией о пользователях ActiveDirectory.
    Units_id - ссылка на идентификатор подразделения к которому относиться пользователь.

Users_ActiveDirectory
    id - внутренний идентификатор таблицы записей о пользотелях AD.
    name - логин пользователя в AD (Например: shemakovnd)
    full_name - полное имя пользователя в AD (Например: Шемаков Николай Дмитриевич)
    department - подразделение из AD (Например: Центр ИТ)
    mail - почта в AD (Например: shemakovnd@rosgvard.ru)
    phone - Номер телефона из AD.
    registred - Дата создания записи в Active Directory.
    last_logon - Дата последнего входа пользователя. (Так же как в Computers_ActiveDirectory.last_visible)
    isDeleted - Если пользователь был удален то будет записана дата когда это было замечено.
    isDisabled - Блокировка пользователя.
    isLocked - Блокировка пользователя.
    updated - Дата последнего обновления в таблице.
    created - Дата создания записи в таблице.

